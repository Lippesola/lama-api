const sql = require("./db.model.js");

// constructor
const User = function(user) {
  this.uuid = user.uuid;
  this.firstName = user.firstName;
  this.lastName = user.lastName;
  this.nickname = user.nickname;
  this.gender = user.gender;
  this.relationship = user.relationship;
  this.mail = user.mail;
  this.birthday = user.birthday;
  this.street = user.street;
  this.zipCode = user.zipCode;
  this.city = user.city;
  this.phone = user.phone;
  this.mobile = user.mobile;
  this.church = user.church;
  this.churchContact = user.churchContact;
  this.job = user.job;
};

/**
User.create = (newUser, result) => {
  sql.query("INSERT INTO user SET ?", newUser, (err, res) => {
    if (err) {
      result(err, null);
      return;
    }

    result(null, { uuid: res.insertId, ...newUser });
  });
};

*/

User.findByUuid = (uuid, result) => {
  sql.query(`SELECT * FROM user WHERE uuid = '${uuid}'`, (err, res) => {
    if (err) {
      result(err, null);
      return;
    }

    if (res.length) {
      result(null, res[0]);
      return;
    }

    // not found User with the uuid
    result({ kind: "not_found" }, null);
  });
};

User.update = (uuid, user, result) => {
  sql.query(
    "UPDATE user SET firstName = ?, lastName = ?, nickname = ?, gender = ?, relationship = ?, mail = ?, birthday = ?, street = ?, zipCode = ?, city = ?, phone = ?, mobile = ?, church = ?, churchContact = ?, job = ? WHERE uuid = ?",
    [
        user.firstName,
        user.lastName,
        user.nickname,
        user.gender,
        user.relationship,
        user.mail,
        user.birthday,
        user.street,
        user.zipCode,
        user.city,
        user.phone,
        user.mobile,
        user.church,
        user.churchContact,
        user.job,
        uuid
    ],
    (err, res) => {
      if (err) {
        result(null, err);
        return;
      }

      if (res.affectedRows == 0) {
        // not found User with the uuid
        result({ kind: "not_found" }, null);
        return;
      }

      result(null, { uuid: uuid, ...user });
    }
  );
};

User.delete = (uuid, result) => {
  sql.query("DELETE FROM user WHERE uuid = ?", uuid, (err, res) => {
    if (err) {
      result(null, err);
      return;
    }

    if (res.affectedRows == 0) {
      // not found User with the uuid
      result({ kind: "not_found" }, null);
      return;
    }

    result(null, res);
  });
};

module.exports = User;
